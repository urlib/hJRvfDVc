;/****************************************************************************
; * Copyright 2011-2014 Qualcomm Atheros Inc., all rights reserved.          *
; *                                                                           *
; * Copyright (c) 2011-2014 Qualcomm Atheros, Inc.                                 *
; * All Rights Reserved.                                                      *
; * Qualcomm Atheros Confidential and Proprietary.                            *
; *                                                                           *
; * INF file for Qualcomm Atheros reference designs                                    *
; ****************************************************************************/

[version]
Signature   = "$Windows NT$"
Class       = Net
ClassGUID   = {4d36e972-e325-11ce-bfc1-08002be10318}
Provider    = %ATHEROS%
CatalogFile = Qcamainext7x.cat
DriverVer   = 02/04/2015,11.0.0.500

[Manufacturer]
%ATHEROS%     = Atheros, NTamd64.6.1, NTamd64.6.3

[ControlFlags]
ExcludeFromSelect = *
;
; OS 6.1 Manufacturer section
;
[Atheros.NTamd64.6.1]
; DisplayName               Section                 DeviceID
; -----------               -------                 --------
;legacy HW Entries
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_NFA344.ndi,         PCI\VEN_168C&DEV_003E
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_NFA345.ndi,         PCI\VEN_168C&DEV_0041
%ATHR.DeviceDesc.2582%     = ATHR_DEV_OS61_988x_Killer_NFA344.ndi,  PCI\VEN_168C&DEV_003E&SUBSYS_15251A56&REV_20 ;for Killer QCA2582
%ATHR.DeviceDesc.2582%     = ATHR_DEV_OS61_988x_Killer_NFA344.ndi,  PCI\VEN_168C&DEV_003E&SUBSYS_152517AA&REV_20 ;for Killer QCA2582 - Lenovo
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_NFA344.ndi,         PCI\VEN_168C&DEV_003E&SUBSYS_3344168C&REV_20 ;for QCA NFA344i
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_NFA345.ndi,         PCI\VEN_168C&DEV_0041&SUBSYS_3345168C&REV_20 ;for QCA NFA345i
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_NFA324.ndi,         PCI\VEN_168C&DEV_003E&SUBSYS_3346168C ;for QCA NFA324
;%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_NFA325.ndi,        PCI\VEN_168C&DEV_0041&SUBSYS_3347168C ;for QCA NFA325
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_NFA354.ndi,         PCI\VEN_168C&DEV_003E&SUBSYS_3348168C&REV_20 ;for QCA NFA354  ; TBD
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_NFA355.ndi,         PCI\VEN_168C&DEV_0041&SUBSYS_3349168C&REV_20 ;for QCA NFA355i ; TBD
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_FUJI_NFA344.ndi,    PCI\VEN_168C&DEV_003E&SUBSYS_190D10CF&REV_20 ;for Fujitsu NFA344
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_LE_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_304417AA&REV_20 ;for lenovo NFA344-WW 
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_LE_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_314417AA&REV_20 ;for lenovo NFA344-US 
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_LE_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_324417AA&REV_20 ;for lenovo NFA344-Indonesia 
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_304517AA&REV_20 ;for lenovo NFA345-WW 
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_314517AA&REV_20 ;for lenovo NFA345-US 
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_324517AA&REV_20 ;for lenovo NFA345-Indonesia
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi,  PCI\VEN_168C&DEV_0041&SUBSYS_354517AA&REV_20 ;for lenovo IPG NFA345-WW
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi,  PCI\VEN_168C&DEV_0041&SUBSYS_364517AA&REV_20 ;for lenovo IPG NFA345-US
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi,  PCI\VEN_168C&DEV_0041&SUBSYS_374517AA&REV_20 ;for lenovo IPG NFA345-Indonesia
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_AC_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_080411AD&REV_20 ;for acer NFA344
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_AC_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_E08E105B&REV_20 ;for acer NFA344
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_NFA344.ndi,  	    PCI\VEN_168C&DEV_003E&SUBSYS_082411AD&REV_20 ;for generic NFA344
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_AS_NFA344.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_081411AD&REV_20 ;for asus NFA344
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_AS_NFA345.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_080511AD&REV_20 ;for asus NFA345  
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_ss_NFA354.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_4125144D&REV_20 ;for samsung QCA6174/NFA354 ; TBD
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_ss_NFA354.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_4126144D&REV_20 ;for samsung QCA6174/NFA354 ; TBD
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_ss_NFA354.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_4127144D&REV_20 ;for samsung QCA6174/NFA354 ; TBD
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS61_988x_ss_NFA354.ndi,      PCI\VEN_168C&DEV_003E&SUBSYS_4128144D&REV_20 ;for samsung QCA6174/NFA354 ; TBD
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_ss_NFA355.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_4121144D&REV_20 ;for samsung QCA6164/NFA355 ; TBD
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_ss_NFA355.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_4122144D&REV_20 ;for samsung QCA6164/NFA355 ; TBD
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_ss_NFA355.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_4123144D&REV_20 ;for samsung QCA6164/NFA355 ; TBD
%ATHR.DeviceDesc.6320_2%   = ATHR_DEV_OS61_988x_ss_NFA355.ndi,      PCI\VEN_168C&DEV_0041&SUBSYS_4124144D&REV_20 ;for samsung QCA6164/NFA355 ; TBD
;
; OS 6.3 Manufacturer section
;
[Atheros.NTamd64.6.3]
; DisplayName               Section                 DeviceID
; -----------               -------                 --------
;legacy HW Entries
%ATHR.DeviceDesc.6320%     = ATHR_DEV_OS63_988x.ndi,     PCI\VEN_168C&DEV_003E
%ATHR.DeviceDesc.2582%     = ATHR_DEV_OS63_988x.ndi,     PCI\VEN_168C&DEV_003E&SUBSYS_15251A56&REV_20 ;for Killer QCA2582

[ATHR_DEV_OS61_988x_NFA324.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA324.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA324.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_NFA324.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_NFA324.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

;[ATHR_DEV_OS61_988x_NFA325.ndi.NTamd64]
;Characteristics = 0x84
;BusType         = 5
;AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, enableSSR.reg
;DelReg          = atheros.DelReg
;CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles
;*IfType         = 71        ; IF_TYPE_IEEE80211
;*MediaType      = 16        ; NdisMediumNative802_11
;*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
;Include         = machine.inf, netvwifibus.inf
;Needs           = VWiFiBus.CopyFiles

;[ATHR_DEV_OS61_988x_NFA325.ndi.NTamd64.Services]
;AddService = Qcamain, 2, atheros.Service, atheros.EventLog
;Include    = netvwifibus.inf
;Needs      = VWiFiBus.Services

;[ATHR_DEV_OS61_988x_NFA325.ndi.NTamd64.HW]
;AddReg  = MSI.reg
;Include = netvwifibus.inf
;Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_Killer_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA344_le.reg, enableSSR.reg, CoexConfig_dell.reg, wowEnable.reg, BeLatency.reg
DelReg          = atheros.DelReg, del_CoexConfig, del_wowEnable
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344_le.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_Killer_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_Killer_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA344.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_NFA345.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA345.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA345.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_NFA345.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_NFA345.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_NFA354.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA345.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA345.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_NFA354.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_NFA354.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_NFA355.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA355.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA355.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_NFA355.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_NFA355.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_FUJI_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os61.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA344.reg, enableSSR.reg, wowEnable.reg
DelReg          = atheros.DelReg, del_wowEnable
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_FUJI_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_FUJI_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_LE_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, smbiosAuthEnable.reg, FW_20.reg, BD_NFA344_le.reg, wowEnable.reg, enableWoWWLAN.reg, enableSSR.reg, TPCOffset_le_344.reg, TPC_Profile_LE_344.reg, resumeAsyncDlFw.reg, SetPCIECtrlRegOnAMD.reg
DelReg          = atheros.DelReg, del_smbiosAuthEnable, del_wowEnable, del_enableWoWWLAN, del_TPCOffset_le_344, del_TPC_Profile, del_resumeAsyncDlFw, del_SetPCIECtrlRegOnAMD
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344_le.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_LE_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_LE_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_LE_NFA345.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, smbiosAuthEnable.reg, FW_20.reg, BD_NFA345.reg, wowEnable.reg, enableWoWWLAN.reg, enableSSR.reg, resumeAsyncDlFw.reg, SetPCIECtrlRegOnAMD.reg
DelReg          = atheros.DelReg, del_smbiosAuthEnable, del_wowEnable, del_enableWoWWLAN, del_resumeAsyncDlFw, del_SetPCIECtrlRegOnAMD
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA345.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_LE_NFA345.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_LE_NFA345.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, smbiosAuthEnable.reg, FW_20.reg, BD_NFA345_le.reg, wowEnable.reg, enableWoWWLAN.reg, enableSSR.reg, TPCOffset_le_345.reg, TPC_Profile_LE_345.reg, resumeAsyncDlFw.reg, SetPCIECtrlRegOnAMD.reg
DelReg          = atheros.DelReg, del_smbiosAuthEnable, del_wowEnable, del_enableWoWWLAN, del_TPCOffset_le_345, del_TPC_Profile, del_resumeAsyncDlFw, del_SetPCIECtrlRegOnAMD
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA345_le.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_LE_NFA345_IPG.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_AC_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA344.reg, enableSSR.reg, TSMC_BandPreference.reg, GOTimeQuota.reg, SetPCIECtrlRegOnAMD.reg
DelReg          = atheros.DelReg, del_SetPCIECtrlRegOnAMD
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_AC_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_AC_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_AS_NFA344.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA344.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_AS_NFA344.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_AS_NFA344.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_AS_NFA345.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, FW_20.reg, BD_NFA345.reg, enableSSR.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA345.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_AS_NFA345.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_AS_NFA345.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_ss_NFA354.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, ignore11denable.reg, FW_20.reg, BD_NFA354.reg, enableSSR.reg, CoexConfig_ss.reg, TPC_Profile_SS.reg, D3TimingOpEnable_ss.reg, SS_WirelessMode.reg, ANI_Disable.reg, DYN_ANI_On_RTS.reg
DelReg          = atheros.DelReg, del_ignore11denable, del_CoexConfig, del_TPC_Profile, del_D3TimingOpEnable, del_ANI_Disable, del_DYN_ANI_On_RTS
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA354.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_ss_NFA354.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_ss_NFA354.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS61_988x_ss_NFA355.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, hardwareRFKillEnable.reg, ignore11denable.reg, FW_20.reg, BD_NFA355.reg, enableSSR.reg, CoexConfig_ss.reg, D3TimingOpEnable_ss.reg, SS_WirelessMode.reg
DelReg          = atheros.DelReg, del_ignore11denable, del_CoexConfig, del_D3TimingOpEnable
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA355.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS61_988x_ss_NFA355.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS61_988x_ss_NFA355.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

[ATHR_DEV_OS63_988x.ndi.NTamd64]
Characteristics = 0x84
BusType         = 5
AddReg          = atheros_os63.reg, atheros11n.reg, smpsDynamic.reg, qca_utf.reg, D0PC.reg, roam.reg, wmmac.reg, FW_20.reg, BD_NFA344.reg
DelReg          = atheros.DelReg
CopyFiles       = atheros.CopyFiles, atheros_FW.CopyFiles, atheros_BD_NFA344.CopyFiles
*IfType         = 71        ; IF_TYPE_IEEE80211
*MediaType      = 16        ; NdisMediumNative802_11
*PhysicalMediaType = 9      ; NdisPhysicalMediumNative802_11
Include         = machine.inf, netvwifibus.inf
Needs           = VWiFiBus.CopyFiles

[ATHR_DEV_OS63_988x.ndi.NTamd64.Services]
AddService = Qcamain, 2, atheros.Service, atheros.EventLog
Include    = netvwifibus.inf
Needs      = VWiFiBus.Services

[ATHR_DEV_OS63_988x.ndi.NTamd64.HW]
AddReg  = MSI.reg
Include = netvwifibus.inf
Needs   = PciASPMOptIn, VWiFiBus.PnPFilterRegistration

;;End of Others Section

[atheros_os61.reg]
HKR, Ndi,                           Service,    0, "Qcamain"
HKR, Ndi\Interfaces,                UpperRange, 0, "ndis5"
HKR, Ndi\Interfaces,                LowerRange, 0, "wlan,ethernet,vwifi"

[atheros_os63.reg]
HKR, Ndi,                           Service,    0, "Qcamain"
HKR, Ndi\Interfaces,                UpperRange, 0, "ndis5"
HKR, Ndi\Interfaces,                LowerRange, 0, "wlan,ethernet,vwifi"

[atheros11n.reg]
;HKR, Ndi\params\*ReceiveBuffers,    ParamDesc,  0, "%ReceiveBuffers%"
;HKR, Ndi\params\*ReceiveBuffers,    default,    0, "256"
;HKR, Ndi\params\*ReceiveBuffers,    min,        0, "1"
;HKR, Ndi\params\*ReceiveBuffers,    max,        0, "00000512"
;HKR, Ndi\params\*ReceiveBuffers,    step,       0, "1"
;HKR, Ndi\params\*ReceiveBuffers,    Base,       0, "10"
;HKR, Ndi\params\*ReceiveBuffers,    type,       0, "int"
;HKR, Ndi\params\*TransmitBuffers,   ParamDesc,  0, "%TransmitBuffers%"
;HKR, Ndi\params\*TransmitBuffers,   default,    0, "512"
;HKR, Ndi\params\*TransmitBuffers,   min,        0, "1"
;HKR, Ndi\params\*TransmitBuffers,   max,        0, "00000512"
;HKR, Ndi\params\*TransmitBuffers,   step,       0, "1"
;HKR, Ndi\params\*TransmitBuffers,   Base,       0, "10"
;HKR, Ndi\params\*TransmitBuffers,   type,       0, "int"
;HKR, Ndi\Params\EnableACS,          ParamDesc,  0, %EnableACS%
;HKR, Ndi\Params\EnableACS,          Type,       0, "enum"
;HKR, Ndi\Params\EnableACS\enum,     "1",        0, %Enable%
;HKR, Ndi\Params\EnableACS\enum,     "0",        0, %Disable%
;HKR, Ndi\Params\EnableACS,          Default,    0, "0"
;HKR, Ndi\Params\PreferredSapBand,      ParamDesc,  0, %PreferredSapBand%
;HKR, Ndi\Params\PreferredSapBand,      Type,       0, "enum"
;HKR, Ndi\Params\PreferredSapBand\enum, "0",        0, %2.4GAp%
;HKR, Ndi\Params\PreferredSapBand\enum, "1",        0, %5GAp%
;HKR, Ndi\Params\PreferredSapBand,      Default,    0, "0"
HKR, Ndi\Params\roamPolicy,         ParamDesc,  0, %RoamAggressive%
HKR, Ndi\Params\roamPolicy,         Type,       0, "enum"
HKR, Ndi\Params\roamPolicy\enum,    "5",        0, %RssiHighest%
HKR, Ndi\Params\roamPolicy\enum,    "4",        0, %RssiMedium-high%
HKR, Ndi\Params\roamPolicy\enum,    "3",        0, %RssiMedium%
HKR, Ndi\Params\roamPolicy\enum,    "2",        0, %RssiMedium-low%
HKR, Ndi\Params\roamPolicy\enum,    "1",        0, %RssiLowest%
HKR, Ndi\Params\roamPolicy,         Default,    0, "3"
HKR, Ndi\params\NetworkAddress,     ParamDesc,  0,  %NetworkAddress%
HKR, Ndi\params\NetworkAddress,     default,    0,  ""
HKR, Ndi\params\NetworkAddress,     LimitText,  0,  "12"
HKR, Ndi\params\NetworkAddress,     UpperCase,  0,  "1"
HKR, Ndi\params\NetworkAddress,     optional,   0,  "1"
HKR, Ndi\params\NetworkAddress,     type,       0,  "edit"
;HKR, Ndi\params\scanTimeValid,      ParamDesc,  0,  %scanTimeValid%
;HKR, Ndi\params\scanTimeValid,      default,    0,  "60"
;HKR, Ndi\params\scanTimeValid,      min,        0,  "20"
;HKR, Ndi\params\scanTimeValid,      max,        0,  "120"
;HKR, Ndi\params\scanTimeValid,      step,       0,  "5"
;HKR, Ndi\params\scanTimeValid,      base,       0,  "10"
;HKR, Ndi\params\scanTimeValid,      type,       0,  "int"

; Wake on pattern match (standardized keyword)
;HKR, ,                                          *WakeOnPattern,           0, "1"
;HKR, Ndi\params\*WakeOnPattern,                 ParamDesc,                0, %WOPDesc%
;HKR, Ndi\params\*WakeOnPattern,                 default,                  0, "1"
;HKR, Ndi\params\*WakeOnPattern,                 type,                     0, "enum"
;HKR, Ndi\params\*WakeOnPattern\enum,            "0",                      0, "Disabled"
;HKR, Ndi\params\*WakeOnPattern\enum,            "1",                      0, "Enabled"

; Wake on Magic Packet (standardized keyword)
;HKR, ,                                          *WakeOnMagicPacket,       0, "1"
;HKR, Ndi\params\*WakeOnMagicPacket,             ParamDesc,                0, %WOMDesc%
;HKR, Ndi\params\*WakeOnMagicPacket,             default,                  0, "1"
;HKR, Ndi\params\*WakeOnMagicPacket,             type,                     0, "enum"
;HKR, Ndi\params\*WakeOnMagicPacket\enum,        "0",                      0, "Disabled"
;HKR, Ndi\params\*WakeOnMagicPacket\enum,        "1",                      0, "Enabled"

[qca_utf.reg]
HKR, , UtfMode,       0x10001,  "0"
HKR, , UtfTraceLevel, 0x10001,  "0"

[atheros.DelReg]
HKR,Ndi\Params\tpc
HKR,,tpc
HKR,,AdHocBand
HKR,,AwakeTimePerf
HKR,,beaconInterval
HKR,,bkScanEnable
HKR,,ccode
HKR,,FragThreshold
HKR,,HwTxRetries
HKR,,rateCtrlEnable
HKR,,RTSThreshold
HKR,,halPcieClockReq
HKR,Ndi\params,radioEnable,0x2000
HKR,Ndi\params,sleepMode,0x2000
HKR,,gpioFunc0ActHi
HKR,,gpioFunc1ActHi
HKR,,gpioLedCustom
HKR,,gpioPinFunc0
HKR,,gpioPinFunc1
HKR, Ndi\params\NetworkAddress
HKR,,NetworkAddress
;HKR, Ndi\params\*ReceiveBuffers
;HKR,,*ReceiveBuffers
;HKR, Ndi\params\*TransmitBuffers
;HKR,,*TransmitBuffers
;HKR, Ndi\params\EnableACS
;HKR,,EnableACS
;HKR, Ndi\params\PreferredSapBand
;HKR,,PreferredSapBand
HKR, Ndi\params\roamPolicy
HKR,,roamPolicy
HKR,,ftEnable
HKR,,wmmacEnable
HKR,,BugCheckOnTargetFailure
HKR,,targetRecoveryEnabled
HKR,,FWFileName
HKR,,BoardDataFileName
HKR,,EnableHardwareRFKill
HKR,,rxChainMask
HKR,,txChainMaskLegacy
HKR,,rxChainMaskLegacy
HKR,,rxChainDetect
HKR,,rxChainDetectRef
HKR,,rxChainDetectThreshA
HKR,,rxChainDetectThreshG
HKR,,rxChainDetectDeltaA
HKR,,rxChainDetectDeltaG
HKR, Ndi\params\smpsDynamic
HKR, Ndi\params\D0PCEnable
;HKR, Ndi\params\scanTimeValid
HKR,,wmeEnabled
HKR,,halPcieWaen
HKR,,halPcieDetach
HKR,,ampEnable
HKR,,btCoexAntDivEnable
HKR,,translateNullSsid
HKR,,defaultIbssChannel
HKR,,paprdEnable
HKR,,lnaDivUseBtAntEnable
HKR,,antCtrlComm2gSwitchEnable
HKR,,extLnaCtlGpio
HKR,,rateCtrlTxFastDrop
HKR,,antDivLowRssiCfg
HKR,,btCoexDivDefVal
HKR,,antDivFastDivBias
HKR,,extAttenMarginCfg
HKR,,UtfMode
HKR,,UtfTraceLevel,

[smpsDynamic.reg]
HKR, Ndi\params\smpsDynamic,            ParamDesc,  0,  %smpsDynamic%
HKR, Ndi\params\smpsDynamic,            Base,       0,  "10"
HKR, Ndi\params\smpsDynamic,            default,    0,  "0"
HKR, Ndi\params\smpsDynamic,            type,       0,  "enum"
HKR, Ndi\params\smpsDynamic\enum,       "1",        0,  %Enable%
HKR, Ndi\params\smpsDynamic\enum,       "0",        0,  %Disable%

[D0PC.reg]
HKR, NDI\params\D0PCEnable,ParamDesc,,          %D0PCDesc%
HKR, NDI\params\D0PCEnable,type,,               "enum"
HKR, NDI\params\D0PCEnable,Default,,            "0"
HKR, NDI\params\D0PCEnable\enum,0,,             %Disable%
HKR, NDI\params\D0PCEnable\enum,1,,             %Enable%

[TSMC_BandPreference.reg]
HKR, Ndi\params\StaPreferredBand,      ParamDesc,          0,          "Preferred Band"
HKR, Ndi\params\StaPreferredBand,      default,            0,          "1"
HKR, Ndi\params\StaPreferredBand,      type,               0,          "enum"
HKR, Ndi\params\StaPreferredBand\enum, "1",                0,          "1 - No Preference"
HKR, Ndi\params\StaPreferredBand\enum, "2",                0,          "2 - Prefer 2.4Ghz Band"
HKR, Ndi\params\StaPreferredBand\enum, "3",                0,          "3 - Prefer 5Ghz Band"
HKR, Ndi\params\StaWirelessMode,       ParamDesc,          0,          "Wireless Mode"
HKR, Ndi\params\StaWirelessMode,       default,            0,          "12"
HKR, Ndi\params\StaWirelessMode,       type,               0,          "enum"
HKR, Ndi\params\StaWirelessMode\enum,  "1",                0,          "01 - 11 b"
HKR, Ndi\params\StaWirelessMode\enum,  "2",                0,          "02 - 11 g"
HKR, Ndi\params\StaWirelessMode\enum,  "3",                0,          "03 - 11 b/g"
HKR, Ndi\params\StaWirelessMode\enum,  "4",                0,          "04 - 11 g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "5",                0,          "05 - 11 b/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "6",                0,          "06 - 11 a"
HKR, Ndi\params\StaWirelessMode\enum,  "7",                0,          "07 - 11 a/n"
HKR, Ndi\params\StaWirelessMode\enum,  "8",                0,          "08 - 11 a/b/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "9",                0,          "09 - 11 a/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "10",               0,          "10 - 11 a/n/ac"
HKR, Ndi\params\StaWirelessMode\enum,  "11",               0,          "11 - 11 a/g/n/ac"
HKR, Ndi\params\StaWirelessMode\enum,  "12",               0,          "12 - 11 a/b/g/n/ac"

[SS_WirelessMode.reg]
HKR, Ndi\params\StaPreferredBand,      ParamDesc,          0,          "Preferred Band"
HKR, Ndi\params\StaPreferredBand,      default,            0,          "1"
HKR, Ndi\params\StaPreferredBand,      type,               0,          "enum"
HKR, Ndi\params\StaPreferredBand\enum, "1",                0,          "1 - No Preference"
HKR, Ndi\params\StaPreferredBand\enum, "2",                0,          "2 - Prefer 2.4Ghz Band"
HKR, Ndi\params\StaPreferredBand\enum, "3",                0,          "3 - Prefer 5Ghz Band"
HKR, Ndi\params\StaWirelessMode,       ParamDesc,          0,          "Wireless Mode"
HKR, Ndi\params\StaWirelessMode,       default,            0,          "12"
HKR, Ndi\params\StaWirelessMode,       type,               0,          "enum"
HKR, Ndi\params\StaWirelessMode\enum,  "1",                0,          "01 - 11 b"
HKR, Ndi\params\StaWirelessMode\enum,  "2",                0,          "02 - 11 g"
HKR, Ndi\params\StaWirelessMode\enum,  "3",                0,          "03 - 11 b/g"
HKR, Ndi\params\StaWirelessMode\enum,  "4",                0,          "04 - 11 g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "5",                0,          "05 - 11 b/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "6",                0,          "06 - 11 a"
HKR, Ndi\params\StaWirelessMode\enum,  "7",                0,          "07 - 11 a/n"
HKR, Ndi\params\StaWirelessMode\enum,  "8",                0,          "08 - 11 a/b/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "9",                0,          "09 - 11 a/g/n"
HKR, Ndi\params\StaWirelessMode\enum,  "10",               0,          "10 - 11 a/n/ac"
HKR, Ndi\params\StaWirelessMode\enum,  "11",               0,          "11 - 11 a/g/n/ac"
HKR, Ndi\params\StaWirelessMode\enum,  "12",               0,          "12 - 11 a/b/g/n/ac"

[MSI.reg]
HKR, "Interrupt Management", 0x00000010
HKR, "Interrupt Management\MessageSignaledInterruptProperties", 0x00000010
HKR, "Interrupt Management\MessageSignaledInterruptProperties", MSISupported, 0x00010001, 1
HKR, "Interrupt Management\MessageSignaledInterruptProperties", MessageNumberLimit, 0x00010001, 8

[ANI_Disable.reg]
HKR, , enableANI, 0x00010001, 0

[DYN_ANI_On_RTS.reg]
HKR, , RTSOnANIFlag, 0x00010001, 1

[roam.reg]
HKR, , ftEnable, 0x00010001, 1

[wmmac.reg]
HKR, , wmmacEnable, 0x00010001, 1

[hardwareRFKillEnable.reg]
HKR, , EnableHardwareRFKill, 0x00010001, 1

[ignore11denable.reg]
HKR, , ignore11dBeacon, 0x00010001, 1

[del_ignore11denable]
HKR, , ignore11dBeacon

[smbiosAuthEnable.reg]
HKR, , smbiosAuthenticationEnable, 0x00010001, 1

[del_smbiosAuthEnable]
HKR, , smbiosAuthenticationEnable

[wowEnable.reg]
HKR, , wowEnable, 0x00010001, 1

[resumeAsyncDlFw.reg]
HKR, , resumeAsyncDlFw, 0x00010001, 1

[del_resumeAsyncDlFw]
HKR, , resumeAsyncDlFw

[SetPCIECtrlRegOnAMD.reg]
HKR, , SetPCIECtrlRegOnAMD, 0x00010001, 1

[del_SetPCIECtrlRegOnAMD]
HKR, , SetPCIECtrlRegOnAMD

[BeLatency.reg]
HKR, , EnableBeLatency, 0x00010001, 1

[del_wowEnable]
HKR, , wowEnable

[enableWoWWLAN.reg]
HKLM, SYSTEM\CurrentControlSet\Services\NativeWifiP\Parameters, EnableWoWLAN, 0x00010001, 1

[del_enableWoWWLAN]
HKLM, SYSTEM\CurrentControlSet\Services\NativeWifiP\Parameters, EnableWoWLAN

[enableSSR.reg]
HKR, , BugCheckOnTargetFailure, 0x00010001, 0x22
HKR, , targetRecoveryEnabled, 0x00010001, 1

[GOTimeQuota.reg]
HKR, , MediaStreamGOTimeQuota, 0x00010001, 0x32

[enableTxbfee.reg]
HKR, , Txbfee, 0x00010001, 0x8D
HKR, , Txbfeeenable, 0x00010001, 1

[del_enableTxbfee]
HKR, , Txbfee
HKR, , Txbfeeenable

[CoexConfig_dell.reg]
HKR, , CoexConfig, 0x00010001, 1

[CoexConfig_ss.reg]
HKR, , CoexConfig, 0x00010001, 2

[del_CoexConfig]
HKR, , CoexConfig

[TPCOffset_le_344.reg]
HKR, , TPCOffset, 0x00010001, 0x25

[del_TPCOffset_le_344]
HKR, , TPCOffset

[TPCOffset_le_345.reg]
HKR, , TPCOffset, 0x00010001, 0x45

[del_TPCOffset_le_345]
HKR, , TPCOffset

[FW_20.reg]
HKR, , FWFileName, 0x00000000, "qca61x420.bin"

[BD_NFA324.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA324i_5.bin"

[BD_NFA344.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA344i.bin"

[BD_NFA344_le.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA344i_highTX.bin"

[BD_NFA345.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA345i.bin"

[BD_NFA345_le.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA345i_highTX.bin"

[BD_NFA354.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA354xp.bin"

[BD_NFA355.reg]
HKR, , BoardDataFileName, 0x00000000, "eeprom_ar6320_2p1_NFA355i.bin"

[TPC_Profile_SS.reg]
HKR, , TpcProfile, 0x00010001, 1

[TPC_Profile_LE_344.reg]
HKR, , TpcProfile, 0x00010001, 2

[TPC_Profile_LE_345.reg]
HKR, , TpcProfile, 0x00010001, 3

[del_TPC_Profile]
HKR, , TpcProfile

[del_ANI_Disable]
HKR, , enableANI

[del_DYN_ANI_On_RTS]
HKR, , RTSOnANIFlag

[D3TimingOpEnable_ss.reg]
HKR, , D3TimingOpEnable, 0x00010001, 1

[del_D3TimingOpEnable]
HKR, , D3TimingOpEnable

;;End of Customized Section

[atheros.Service]
DisplayName     = %ATHR.Service.DispName%
ServiceType     = 1         ;SERVICE_KERNEL_DRIVER
StartType       = 3         ;SERVICE_DEMAND_START
ErrorControl    = 1         ;SERVICE_ERROR_NORMAL
ServiceBinary   = %12%\Qcamain7x64.sys
LoadOrderGroup  = NDIS

[atheros.EventLog]
AddReg = atheros.AddEventLog.reg

[atheros.AddEventLog.reg]
HKR, , EventMessageFile, 0x00020000, "%%SystemRoot%%\System32\netevent.dll"
HKR, , TypesSupported,   0x00010001, 7

[atheros.CopyFiles]
Qcamain7x64.sys,,,2

[atheros_FW.CopyFiles]
qca61x420.bin,,,2

[atheros_BD_NFA324.CopyFiles]
eeprom_ar6320_2p1_NFA324i_5.bin,,,2

[atheros_BD_NFA344.CopyFiles]
eeprom_ar6320_2p1_NFA344i.bin,,,2

[atheros_BD_NFA344_le.CopyFiles]
eeprom_ar6320_2p1_NFA344i_highTX.bin,,,2

[atheros_BD_NFA345.CopyFiles]
eeprom_ar6320_2p1_NFA345i.bin,,,2

[atheros_BD_NFA345_le.CopyFiles]
eeprom_ar6320_2p1_NFA345i_highTX.bin,,,2

[atheros_BD_NFA354.CopyFiles]
eeprom_ar6320_2p1_NFA354xp.bin,,,2

[atheros_BD_NFA355.CopyFiles]
eeprom_ar6320_2p1_NFA355i.bin,,,2

[SourceDisksNames]
1 = %DiskDescription%,,,

[SourceDisksFiles]
Qcamain7x64.sys = 1,,
qca61x420.bin = 1,,
eeprom_ar6320_2p1_NFA324i_5.bin = 1,,
eeprom_ar6320_2p1_NFA344i.bin = 1,,
eeprom_ar6320_2p1_NFA344i_highTX.bin = 1,,
eeprom_ar6320_2p1_NFA345i.bin = 1,,
eeprom_ar6320_2p1_NFA345i_highTX.bin = 1,,
eeprom_ar6320_2p1_NFA354xp.bin = 1,,
eeprom_ar6320_2p1_NFA355i.bin = 1,,

[DestinationDirs]
atheros.CopyFiles              = 12
atheros_FW.CopyFiles           = 12
atheros_BD_NFA324.CopyFiles    = 12
atheros_BD_NFA344.CopyFiles    = 12
atheros_BD_NFA344_le.CopyFiles = 12
atheros_BD_NFA345.CopyFiles    = 12
atheros_BD_NFA345_le.CopyFiles = 12
atheros_BD_NFA354.CopyFiles    = 12
atheros_BD_NFA355.CopyFiles    = 12
DefaultDestDir                 = 11

[Strings]
Msft                         = "Microsoft"
Atheros                      = "Qualcomm Atheros Communications Inc."
ATHR.Service.DispName        = "Qualcomm Atheros Extensible Wireless LAN 11AC device driver"
DiskDescription              = "Qualcomm Atheros Sample Driver Disk 1"
;TransmitBuffers              = "Transmit Buffers"
Enable                       = "Enable"
Disable                      = "Disable"
;EnableACS                    = "EnableACS"
;PreferredSapBand                = "Preferred SAP Band"
;2.4GAp                       = "1. 2.4GHz SAP"
;5GAp                         = "2. 5GHz SAP"
RoamAggressive               = "Roaming aggressiveness"
RssiLowest                   = "1.Lowest"
RssiMedium-low               = "2.Medium-low"   
RssiMedium                   = "3.Medium"
RssiMedium-high              = "4.Medium-high"
RssiHighest                  = "5.Highest"
;ReceiveBuffers               = "Receive Buffers"
NetworkAddress               = "Network Address"
;scanTimeValid                = "Scan Valid Interval"
bkScanEnable                 = "BackgroundScan On/Off"
radioEnable                  = "Radio On/Off"
smpsDynamic                  = "Dynamic MIMO Power Save"
D0PCDesc                     = "D0 PacketCoalescing"
ATHR.DeviceDesc.988x         = "Qualcomm Atheros AR988x Wireless Network Adapter"
ATHR.DeviceDesc.6320         = "Qualcomm Atheros QCA61x4 Wireless Network Adapter"
ATHR.DeviceDesc.6320_2       = "Qualcomm Atheros QCA61x4 Wireless Network Adapter"
ATHR.DeviceDesc.2582		 = "Killer Wireless-n/a/ac 1525 Wireless Network Adapter"
ATHR.DeviceDesc.9377         = "Qualcomm Atheros QCA9377 Wireless Network Adapter"
;WOPDesc                      = "Wake on pattern match"
;WOMDesc                      = "Wake on Magic Packet"
